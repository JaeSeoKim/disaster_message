{"version":3,"sources":["components/MsgContainer.js","action/InfinityScroll.js","store/store.js","action/useDisasterMsgAPI.js","routes/Home.js","routes/Loaction.js","routes/Error_page.js","action/kakaomap/useSetMarker.js","action/useMaskData.js","components/MaskStoreList.js","routes/Detail.js","routes/About.js","components/Navigation.js","components/kakaoMap/KakaoMap.js","action/kakaomap/useGeolocation.js","action/kakaomap/useCenterChanged.js","components/MaskMap.js","App.js","index.js"],"names":["no","InfinityScroll","callBack","handleScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","window","innerHeight","useEffect","addEventListener","removeEventListener","store","createStore","state","disasterMsg","searchQuery","data","pageNo","maskMap","map","storeList","oldMarker","oldOverlay","action","console","log","type","concat","marker","overlay","actionCreators","query","useDisasterMsgAPI","dispatch","useDispatch","get","a","Axios","params","ServiceKey","process","numOfRows","flag","then","response","DisasterMsg","row","catch","error","isLoding","connect","message","success","content","key","duration","length","loading","style","maxWidth","margin","marginBottom","filterData","filter","value","location_name","includes","index","to","pathname","md101_sn","location","date","create_date","msg","id","hoverable","title","onClick","block","Home","className","marginTop","Option","Select","Location","offsetTop","showSearch","width","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","Error_page","kakao","stores","kakaoMap","marker_old","overlay_old","useSetMarker","useSelector","dispatcher","setMarker","setMap","marker_new","overlay_new","imageSrc","remain_stat","remain_color","name","lat","lng","addr","created_at","stock_at","customOverlay","maps","CustomOverlay","position","LatLng","yAnchor","imageSize","Size","markerImage","MarkerImage","Marker","image","event","addListener","panTo","getPosition","push","useMaskData","useState","address","count","code","maskData","setMaskData","getMaskDataAddr","getMaskDataGeo","m","Panel","Collapse","MaskStoreList","header","textAlign","href","target","color","Detail","props","useMaskdata","undefined","history","Title","Typography","Paragraph","About","level","GithubOutlined","IdcardOutlined","Navigation","defaultSelectedKeys","defaultOpenKeys","mode","theme","Item","NotificationOutlined","PushpinOutlined","EnvironmentOutlined","InfoCircleOutlined","KakaoMap","container","getElementById","options","center","Map","height","useGeolocation","getGeo","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","alert","useCenterChanged","setEvent","getLevel","latlng","getCenter","getLat","getLng","MaskMap","padding","App","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.d14a4c64.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, message, Button } from \"antd\";\r\nimport InfinityScroll from \"../action/InfinityScroll\";\r\nimport useDisasterMsgAPI from '../action/useDisasterMsgAPI'\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nlet isLoding = false\r\nlet no;\r\n\r\nconst MsgContainer = ({ data, pageNo, searchQuery }) => {\r\n  no = pageNo;\r\n  console.log(\"Query : \", searchQuery)\r\n  const { get } = useDisasterMsgAPI(pageNo);\r\n\r\n  InfinityScroll(async () => {\r\n    if (!isLoding) {\r\n      isLoding = true;\r\n      await get(no);\r\n      isLoding = false;\r\n      message.success({ content: \"Loaded!\", key: no, duration: 2 });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    get(pageNo);\r\n  }, []);\r\n\r\n  if (data.length === 0) {\r\n    return <div>\r\n      <Card loading={true} style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }} />\r\n    </div>\r\n\r\n  } else if (searchQuery !== \"\") {\r\n    const filterData = data.filter(value =>\r\n      value.location_name.includes(searchQuery));\r\n\r\n    return <div >\r\n      {filterData.map((value, index) => (\r\n        <div style={{ margin: \"auto\", maxWidth: 550 }} key={index} >\r\n          <Link to={{\r\n            pathname: `/detail/${value.md101_sn}`,\r\n            state: {\r\n              location: value.location_name,\r\n              date: value.create_date,\r\n              msg: value.msg,\r\n              id: value.md101_sn\r\n            }\r\n          }} >\r\n            <Card hoverable style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n              title={value.location_name + \"\\t\" + value.create_date} >\r\n              {value.msg}\r\n            </Card>\r\n          </Link>\r\n        </div>\r\n      ))\r\n      }\r\n      <Button style={{ maxWidth: 500, marginBottom: 13 }}\r\n        onClick={async () => {\r\n          await get(no);\r\n          message.success({ content: \"Loaded!\", key: no, duration: 2 });\r\n        }} block>더보기</Button>\r\n    </div>\r\n  } else {\r\n    return <div >\r\n      {data.map((value, index) => (\r\n        <div style={{ margin: \"auto\", maxWidth: 550 }} key={index} >\r\n          <Link to={{\r\n            pathname: `/detail/${value.md101_sn}`,\r\n            state: {\r\n              location: value.location_name,\r\n              date: value.create_date,\r\n              msg: value.msg,\r\n              id: value.md101_sn\r\n            }\r\n          }} >\r\n            <Card hoverable style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n              title={value.location_name + \"\\t\" + value.create_date} >\r\n              {value.msg}\r\n            </Card>\r\n          </Link>\r\n        </div>\r\n      ))\r\n      }\r\n      <Button style={{ maxWidth: 500, marginBottom: 13 }}\r\n        onClick={async () => {\r\n          await get(no);\r\n          message.success({ content: \"Loaded!\", key: no, duration: 2 });\r\n        }} block>더보기</Button>\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.disasterMsg.data,\r\n    pageNo: state.disasterMsg.pageNo,\r\n    searchQuery: state.disasterMsg.searchQuery\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MsgContainer);","import { useEffect } from 'react';\r\n\r\nconst InfinityScroll = (callBack) => {\r\n\r\n\r\n  const handleScroll = () => {\r\n    let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\r\n    let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\r\n    let clientHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\r\n    if (scrollTop + clientHeight >= scrollHeight - 2) {\r\n      if (typeof callBack === \"function\") {\r\n        callBack();\r\n      }\r\n    }\r\n  } \r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n};\r\n\r\nexport default InfinityScroll;","import { createStore } from \"redux\";\r\n\r\n/**\r\n * DisasterMSG Action Type\r\n */\r\nconst ADD_DISASTER_MSG_DATA = \"addDisasterMsgData\";\r\nconst SET_MSG_SEARCHQUERY = \"setMsgSearchQuery\";\r\n\r\nconst addDisasterMsgData = (data) => {\r\n  return {\r\n    type: ADD_DISASTER_MSG_DATA,\r\n    data: data\r\n  }\r\n};\r\n\r\nconst setMsgSearchQuery = (query) => {\r\n  return {\r\n    type: SET_MSG_SEARCHQUERY,\r\n    searchQuery: query\r\n  };\r\n};\r\n\r\n/**\r\n * MaskMap Action Type\r\n */\r\n\r\nconst SET_MAP = \"setMap\";\r\nconst SET_STORE_LIST = \"setStoreList\";\r\nconst ADD_MARKER = \"addMarker\";\r\n\r\nconst setMap = (map) => {\r\n  return {\r\n    type: SET_MAP,\r\n    map: map\r\n  }\r\n};\r\n\r\n\r\nconst setStoreList = (storeList) => {\r\n  return {\r\n    type: SET_STORE_LIST,\r\n    storeList: storeList\r\n  };\r\n};\r\n\r\nconst addMarker = (marker, overlay) => {\r\n  return {\r\n    type: ADD_MARKER,\r\n    marker: marker,\r\n    overlay: overlay\r\n  }\r\n};\r\n\r\n\r\n\r\nconst reducer = (state = {\r\n  disasterMsg: {\r\n    searchQuery: \"\",\r\n    data: [],\r\n    pageNo: 1\r\n  },\r\n  maskMap: {\r\n    map: null,\r\n    storeList: [],\r\n    oldMarker: [],\r\n    oldOverlay: []\r\n  }\r\n}, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case ADD_DISASTER_MSG_DATA:\r\n      return {\r\n        ...state,\r\n        disasterMsg: {\r\n          ...state.disasterMsg,\r\n          data: state.disasterMsg.data.concat(action.data),\r\n          pageNo: state.disasterMsg.pageNo + 1\r\n        }\r\n      };\r\n      break;\r\n\r\n    case SET_MSG_SEARCHQUERY:\r\n      return {\r\n        ...state,\r\n        disasterMsg: {\r\n          ...state.disasterMsg,\r\n          searchQuery: action.searchQuery\r\n        }\r\n      };\r\n      break;\r\n\r\n    case SET_MAP:\r\n      return {\r\n        ...state,\r\n        maskMap: {\r\n          ...state.maskMap,\r\n          map: action.map\r\n        }\r\n      };\r\n      break;\r\n\r\n    case SET_STORE_LIST:\r\n      return {\r\n        ...state,\r\n        maskMap: {\r\n          ...state.maskMap,\r\n          storeList: action.storeList\r\n        }\r\n      };\r\n      break;\r\n\r\n    case ADD_MARKER:\r\n      console.log(\"adding... :\",action);\r\n      return {\r\n        ...state,\r\n        maskMap: {\r\n          ...state.maskMap,\r\n          oldMarker: action.marker,\r\n          oldOverlay: action.overlay\r\n        }\r\n      };\r\n      break;\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport const actionCreators = {\r\n  setMsgSearchQuery,\r\n  addDisasterMsgData,\r\n  setStoreList,\r\n  setMap,\r\n  addMarker\r\n};\r\n\r\nexport default store;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { actionCreators } from '../store/store';\r\n\r\nconst key = process.env.REACT_APP_API_KEY;\r\n\r\nexport const useDisasterMsgAPI = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const get = async (pageNo) => {\r\n    console.log(\"api : \", pageNo)\r\n    await Axios.get(\"http://apis.data.go.kr/1741000/DisasterMsg2/getDisasterMsgList\", {\r\n      params: {\r\n        ServiceKey: key,\r\n        type: \"json\",\r\n        pageNo: pageNo,\r\n        numOfRows: 50,\r\n        flag: \"Y\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        dispatch(actionCreators.addDisasterMsgData(response.data.DisasterMsg[1].row));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  return { get };\r\n};\r\n\r\nexport default useDisasterMsgAPI;","import React, { useEffect } from 'react';\r\nimport MsgContainer from \"../components/MsgContainer\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(()=>{\r\n    dispatch(actionCreators.setMsgSearchQuery(\"\"));\r\n  },[])\r\n\r\n  return <div className=\"home\" style={{ marginTop: 25 }}>\r\n    <MsgContainer />\r\n  </div>\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Select, Affix } from \"antd\";\r\nimport MsgContainer from \"../components/MsgContainer\";\r\nimport { actionCreators } from \"../store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Option } = Select;\r\n\r\nvar location = \"\";\r\n\r\nconst Location = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setQuery = (value) => {\r\n    console.log(`selected ${value}`);\r\n    dispatch(actionCreators.setMsgSearchQuery(value));\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Affix offsetTop={50} style={{marginBottom:10}}>\r\n        <Select\r\n          showSearch\r\n          style={{ maxWidth: 500, width: \"100%\" }}\r\n          placeholder=\"지역을 선택해 주세요.\"\r\n          optionFilterProp=\"children\"\r\n          onChange={setQuery}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          <Option value=\"강원도\">강원도</Option>\r\n          <Option value=\"경기도\">경기도</Option>\r\n          <Option value=\"경상남도\">경상남도</Option>\r\n          <Option value=\"경상북도\">경상북도</Option>\r\n          <Option value=\"광주광역시\">광주광역시</Option>\r\n          <Option value=\"대구광역시\">대구광역시</Option>\r\n          <Option value=\"대전광역시\">대전광역시</Option>\r\n          <Option value=\"부산광역시\">부산광역시</Option>\r\n          <Option value=\"서울특별시\">서울특별시</Option>\r\n          <Option value=\"울산광역시\">울산광역시</Option>\r\n          <Option value=\"인천광역시\">인천광역시</Option>\r\n          <Option value=\"전라남도\">전라남도</Option>\r\n          <Option value=\"전라북도\">전라북도</Option>\r\n          <Option value=\"제주특별자치도\">제주특별자치도</Option>\r\n          <Option value=\"충청남도\">충청남도</Option>\r\n          <Option value=\"충청북도\">충청북도</Option>\r\n          <Option value=\"세종특별자치시\">세종특별자치시</Option>\r\n        </Select>\r\n      </Affix>\r\n      <MsgContainer Location={location} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React from \"react\";\r\n\r\nconst Error_page = () => {\r\n  return (\r\n    <h1>404 Error</h1>\r\n  );\r\n};\r\n\r\nexport default Error_page;\r\n","/*global kakao*/\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../../store/store\";\r\nimport { Layout } from \"antd\";\r\n\r\nconst { kakao } = window;\r\n\r\nvar stores = [];\r\nvar kakaoMap = {};\r\nvar marker_old = [];\r\nvar overlay_old = [];\r\n\r\nconst useSetMarker = () => {\r\n\r\n  const { map, storeList, oldMarker, oldOverlay } = useSelector(state => ({\r\n    map: state.maskMap.map,\r\n    storeList: state.maskMap.storeList,\r\n    oldMarker: state.maskMap.oldMarker,\r\n    oldOverlay: state.maskMap.oldOverlay\r\n  }));\r\n  console.log(oldMarker);\r\n  const dispatcher = useDispatch();\r\n\r\n\r\n  stores = storeList;\r\n  kakaoMap = map;\r\n  marker_old = oldMarker;\r\n  overlay_old = oldOverlay;\r\n\r\n\r\n  const setMarker = () => {\r\n\r\n    // Marker 초기화\r\n    marker_old.map(value => {\r\n      value.setMap(null);\r\n    });\r\n    // overlay 초기화\r\n    overlay_old.map(value => {\r\n      value.setMap(null);\r\n    });\r\n\r\n\r\n    var marker_new = [];\r\n    var overlay_new = [];\r\n\r\n    // Marker 설정\r\n    stores.map(value => {\r\n      var imageSrc = \"\"\r\n      var remain_stat = \"\"\r\n      var remain_color = \"\"\r\n      switch (value.remain_stat) {\r\n        case \"plenty\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/disaster_message/master/resource/maskMapMarker/green.png\";\r\n          remain_stat = \"100개 이상\";\r\n          remain_color = \"#87d068\";\r\n          break;\r\n        case \"some\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/disaster_message/master/resource/maskMapMarker/blue.png\";\r\n          remain_stat = \"30개 이상 100개 미만\";\r\n          remain_color = \"#2db7f5\";\r\n          break;\r\n        case \"few\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/disaster_message/master/resource/maskMapMarker/red.png\";\r\n          remain_stat = \"30개 미만\";\r\n          remain_color = \"#f50\";\r\n          break;\r\n        case \"empty\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/disaster_message/master/resource/maskMapMarker/gray.png\";\r\n          remain_stat = \"1개 이하\";\r\n          remain_color = \"#A9A9A9\";\r\n          break;\r\n        case \"break\":\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/disaster_message/master/resource/maskMapMarker/black.png\";\r\n          remain_stat = \"판매중지\";\r\n          remain_color = \"#A9A9A9\";\r\n          //재고 없는 거는 화면에 표시 안함\r\n          //return;\r\n          break;\r\n        default:\r\n          imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/disaster_message/master/resource/maskMapMarker/black.png\";\r\n          remain_stat = \"ERROR\";\r\n          remain_color = \"#A9A9A9\";\r\n          return;\r\n      }\r\n\r\n      const content =\r\n        `<div style=\"margin-bottom: 40px;\">` +\r\n        `  <div class=\"ant-card ant-card-bordered ant-card-hoverable\" style=\"font-size: 12px; border-radius: 5px;\">` +\r\n        `    <div class=\"ant-card-head\" style=\"padding: 10px;\">` +\r\n        `      <div class=\"ant-card-head-wrapper\" >` +\r\n        `        <div class=\"ant-card-head-title\" style=\"font-size: 13px; padding: 0px;\">` +\r\n        `          ${value.name}` +\r\n        `        </div>` +\r\n        `      </div>` +\r\n        `    </div>` +\r\n        `    <div class=\"ant-card-body\" style=\"text-align: left; padding: 10px;\">` +\r\n        `      <a href=\"https://map.kakao.com/link/map/${value.name},${value.lat},${value.lng}\" target=\"_blank\" >` +\r\n        `       <p>주소: ${value.addr}</p>` +\r\n        `      </a>` +\r\n        `       <p>생성시간: ${value.created_at}</p>` +\r\n        `       <p>입고시간: ${value.stock_at}</p>` +\r\n        `       <span class=\"ant-tag ant-tag-has-color\" style=\"background-color:${remain_color}\">${remain_stat}</span>` +\r\n        `   </div>` +\r\n        `  </div>` +\r\n        `</div>`\r\n        \r\n\r\n      // 커스텀 오버레이를 생성합니다\r\n      var customOverlay = new kakao.maps.CustomOverlay({\r\n        map: null,\r\n        position: new kakao.maps.LatLng(value.lat, value.lng),\r\n        content: content,\r\n        yAnchor: 1\r\n      });\r\n\r\n\r\n      // 마커 이미지의 이미지 크기 입니다\r\n      var imageSize = new kakao.maps.Size(30, 35);\r\n      // 마커 이미지를 생성합니다    \r\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n\r\n      // 마커를 생성합니다\r\n      var marker = new kakao.maps.Marker({\r\n        map: kakaoMap, // 마커를 표시할 지도\r\n        position: new kakao.maps.LatLng(value.lat, value.lng), // 마커를 표시할 위치\r\n        title: value.name, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n        image: markerImage // 마커 이미지 \r\n      });\r\n\r\n      // 마커를 클릭했을 때 커스텀 오버레이를 표시합니다\r\n      kakao.maps.event.addListener(marker, 'click', function () {\r\n        kakaoMap.panTo(marker.getPosition());\r\n        customOverlay.setMap(kakaoMap);\r\n      });\r\n\r\n      // 커스텀 오버레이를 닫기 위해 호출되는 함수입니다 \r\n\r\n      marker_new.push(marker);\r\n\r\n      overlay_new.push(customOverlay)\r\n    });\r\n\r\n    dispatcher(actionCreators.addMarker(marker_new, overlay_new));\r\n    console.log(marker_new, overlay_new);\r\n\r\n  };\r\n  return { setMarker };\r\n}\r\n\r\nexport default useSetMarker;","import { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport useSetMarker from \"./kakaomap/useSetMarker\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../store/store\";\r\n\r\nconst useMaskData = () => {\r\n  /*\r\n  주소 기준 동네별 공적 마스크 판매정보 제공 서비스주소 기준 동네별 공적 마스크 판매정보 제공 서비스\r\n\r\n  address     주소\t            string\t\t\t검색 기준이 될 주소\r\n  count\t      조회 수\t          integer\t\t\t조회 데이터 수\r\n  addr\t      판매처 주소       string\t\t\t판매처 주소\r\n  code\t      식별코드          string\t\t\t\r\n  created_at\t데이터 생성일자   string\t\t\t\r\n  remain_stat\t재고 상태\t        string\t\t\t100개 이상(녹색): 'plenty' / \r\n                                            30개 이상 100개미만(노랑색): 'some' / \r\n                                            2개 이상 30개 미만(빨강색): 'few' / \r\n                                            1개 이하(회색): 'empty' / \r\n                                            판매중지: 'break'\r\n  stock_at\t  입고시간\t        string\t\t\t\r\n  lat\t        위도\t            number($float)\t\t\twgs84 좌표계 / \r\n                                                    최소:33.0, 최대:43.0\r\n  lng\t        경도\t            number($float)\t\t\twgs84 표준 / \r\n                                                    최소:124.0, 최대:132.0\r\n  name\t      이름\t            string\t\t\t\r\n  type\t      판매처 유형\t      string\t\t\t약국: '01', 우체국: '02', 농협: '03'\r\n  */\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [maskData, setMaskData] = useState(\r\n    {\r\n      address: \"\",\r\n      count: 0,\r\n      stores: [\r\n        {\r\n          addr: \"\",\r\n          code: \"\",\r\n          created_at: \"\",\r\n          lat: 0,\r\n          lng: 0,\r\n          name: \"\",\r\n          remain_stat: \"\",\r\n          stock_at: \"\",\r\n          type: \"\"\r\n        }\r\n      ]\r\n    }\r\n  );\r\n\r\n  const getMaskDataAddr = async (location) => {\r\n    console.log(\"location: \", location);\r\n    await Axios.get(\r\n      `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByAddr/json?address=${location}`)\r\n      .then(response => {\r\n        const { address,\r\n          count,\r\n          stores } = response.data\r\n        console.log(response);\r\n        setMaskData(\r\n          {\r\n            address,\r\n            count,\r\n            stores\r\n          }\r\n        );\r\n        console.log(stores);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /*\r\n  url\t/storesByGeo/json\r\n  key\t항목명(국문)\ttype\t기본값\t필수\t항목설명\r\n  Lat\t위도\tnumber\t\tN\twgs84 좌표계 / \r\n  최소:33.0, 최대:43.0\r\n  lng\t경도\tnumber\t\tN\twgs84 표준 / \r\n  최소:124.0, 최대:132.0\r\n  m\t반경(미터)\tinteger\t\tN\t최대 5000(5km)까지 조회 가능\r\n  */\r\n\r\n  const getMaskDataGeo = async (lat, lng, m) => {\r\n    console.log(\"lat: \", lat, \" lng: \", lng, \" m: \", m);\r\n    await Axios.get(\r\n      `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${lat}&lng=${lng}&m=${m}`)\r\n      .then(response => {\r\n        const {\r\n          count,\r\n          stores } = response.data\r\n        dispatch(actionCreators.setStoreList(stores));\r\n        console.log(stores.length);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return { ...maskData, getMaskDataAddr, getMaskDataGeo };\r\n}\r\n\r\nexport default useMaskData;","import React from \"react\";\r\nimport { Collapse, Card, Tag } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst MaskStoreList = ({ stores, address }) => {\r\n\r\n  return (\r\n    <div className=\"more_Info\">\r\n      <Collapse style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}>\r\n        <Panel header={address + \"의 현재 구매 가능한 마스크 판매처\"} key=\"maskMap\">\r\n          <h3 style={{textAlign:\"left\"}}>\r\n            <p>현재 구매 가능한 구매처만 목록화 했습니다.</p>\r\n            <p>해당 카드를 클릭 하시면 판매처 주소를 확인 할 수 있습니다.</p>\r\n          </h3>\r\n          {stores.map((value, index) => (\r\n            typeof value.remain_stat !== \"undefined\"  && value.remain_stat !== \"\"  && value.remain_stat !== null && value.remain_stat !== \"break\" && value.remain_stat !== \"empty\" &&\r\n              <a href={\"https://map.kakao.com/link/map/\" + value.name + \",\" + value.lat + \",\" + value.lng} target=\"_blank\" key={value.code}>\r\n                <Card style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n                  title={value.name} >\r\n                  <div style={{ textAlign: \"left\" }}>\r\n                    <p>주소 : {value.addr}</p>\r\n                    <p>마지막 업데이트 : {value.created_at}</p>\r\n                    <p>입고 시간 : {value.stock_at}</p>\r\n                    <p>\r\n                      {value.remain_stat === \"plenty\" && <Tag color=\"#87d068\">100개 이상</Tag>}\r\n                      {value.remain_stat === \"some\" && <Tag color=\"#2db7f5\">30개 이상 100개 미만</Tag>}\r\n                      {value.remain_stat === \"few\" && <Tag color=\"#f50\">30개 미만</Tag>}\r\n                    </p>\r\n                  </div>\r\n                </Card>\r\n              </a>\r\n          ))}\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MaskStoreList;","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Collapse, } from \"antd\";\r\nimport Error_page from \"./Error_page\";\r\nimport useMaskdata from \"../action/useMaskData\";\r\nimport MaskStoreList from \"../components/MaskStoreList\";\r\n\r\nconst Detail = (props) => {\r\n\r\n  const {\r\n    address,\r\n    count,\r\n    stores,\r\n    getMaskDataAddr\r\n  } = useMaskdata();\r\n  useEffect(() => {\r\n    if (props.location.state === undefined) {\r\n      props.history.push('/');\r\n    } else {\r\n      getMaskDataAddr(props.location.state.location);\r\n    }\r\n  }, []);\r\n\r\n  const data = props.location.state;\r\n\r\n  return <div>\r\n    {data === undefined ? <Error_page />\r\n      :\r\n      <div>\r\n        <h1>개발중..........</h1>\r\n        <Card style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n          title={data.location + \"\\t\" + data.date} >\r\n          {data.msg}\r\n        </Card>\r\n        {count === 0 ?\r\n          <div className=\"maskStoreList\" />\r\n          :\r\n          <MaskStoreList stores={stores} address={address}>\r\n          </MaskStoreList>\r\n        }\r\n      </div>\r\n    }\r\n  </div>\r\n};\r\n\r\nexport default Detail;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { GithubOutlined, IdcardOutlined } from '@ant-design/icons';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst About = () => {\r\n  return (\r\n    <Typography>\r\n      <a href=\"https://github.com/JaeSeoKim/disaster_message/\">\r\n        <Title>Disaster_message</Title>\r\n      </a>\r\n      <Paragraph>\r\n        이 프로젝트는 한국 공공데이터 포털에서 제공하는 `재난문자방송 발령현황 서비스 API` 를 이용하여 제작 하였습니다.\r\n        </Paragraph>\r\n      <Title level={4}>Created by JaeSeoKim</Title>\r\n      <a href=\"https://github.com/JaeSeoKim\">\r\n        <Title level={4}><GithubOutlined /> Github</Title>\r\n      </a>\r\n      <a href=\"https://jaeseokim.tistory.com/\">\r\n        <Title level={4}><IdcardOutlined /> Blog</Title>\r\n      </a>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Menu, Affix } from 'antd';\r\nimport {\r\n  InfoCircleOutlined,\r\n  PushpinOutlined,\r\n  NotificationOutlined,\r\n  EnvironmentOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Affix style={{ marginBottom: 10 }}>\r\n      <div>\r\n        <Menu\r\n          defaultSelectedKeys={['home']}\r\n          defaultOpenKeys={['menu']}\r\n          mode=\"horizontal\"\r\n          theme=\"white\"\r\n        >\r\n          <Menu.Item key=\"home\">\r\n            <NotificationOutlined />\r\n            <NavLink to=\"/\">\r\n              <span>재난문자 목록</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"location\">\r\n            <PushpinOutlined />\r\n            <NavLink to=\"/location\">\r\n              <span>지역별 재난문자</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"maskMap\">\r\n            <EnvironmentOutlined />\r\n            <NavLink to=\"/maskMap\">\r\n              <span>마스크맵</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"about\">\r\n            <InfoCircleOutlined />\r\n            <NavLink to=\"/about\">\r\n              <span>About</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","/*global kakao*/\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../../store/store\";\r\nimport useSetMarker from \"../../action/kakaomap/useSetMarker\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst KakaoMap = () => {\r\n\r\n  const dispatcher = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('mask-map');\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 3\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    \r\n\r\n    dispatcher(actionCreators.setMap(map), [map]);\r\n  }, [])\r\n\r\n  return <div id=\"mask-map\" style={{ height: \"100%\" }}>\r\n  </div>\r\n}\r\n\r\nexport default KakaoMap;","/*global kakao*/\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst { kakao } = window\r\n\r\nvar kakaoMap= {};\r\n\r\nconst useGeolocation = () => {\r\n\r\n  const { map } = useSelector(state => ({ map: state.maskMap.map }), []);\r\n\r\n  kakaoMap = map;\r\n  \r\n  const getGeo = () => {\r\n    if (navigator.geolocation) {\r\n      if (kakaoMap !== null) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          kakaoMap.panTo(new kakao.maps.LatLng(position.coords.latitude, position.coords.longitude));\r\n        }\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"이 브라우저에서는 Geolocation이 지원되지 않습니다.\")\r\n    }\r\n  }\r\n  return {getGeo} ;\r\n}\r\n\r\nexport default useGeolocation;","/*global kakao*/\r\nimport { useSelector } from \"react-redux\";\r\nimport useMaskData from \"../useMaskData\";\r\nimport useSetMarker from \"./useSetMarker\";\r\n\r\nconst { kakao } = window;\r\n\r\nvar kakaoMap = {};\r\n\r\nconst useCenterChanged = () => {\r\n  const { map, storeList } = useSelector(state => ({\r\n    map: state.maskMap.map\r\n  }));\r\n\r\n  const { getMaskDataGeo } = useMaskData();\r\n\r\n  const { setMarker } = useSetMarker();\r\n\r\n  kakaoMap = map;\r\n\r\n  const setEvent = () => {\r\n    kakao.maps.event.addListener(kakaoMap, 'dragend', () => {\r\n\r\n      // 지도의  레벨을 얻어옵니다\r\n      var level = kakaoMap.getLevel();\r\n\r\n      // 지도의 중심좌표를 얻어옵니다 \r\n      var latlng = kakaoMap.getCenter();\r\n\r\n      getMaskDataGeo(latlng.getLat(), latlng.getLng(), 1000);\r\n\r\n      console.log(latlng.getLat(), latlng.getLng());\r\n\r\n      setMarker();\r\n\r\n    });\r\n  };\r\n\r\n  return { setEvent };\r\n\r\n}\r\n\r\nexport default useCenterChanged;","/*global kakao*/\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport useMaskData from \"../action/useMaskData\";\r\nimport KaKaoMap from \"./kakaoMap/KakaoMap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useGeolocation from \"../action/kakaomap/useGeolocation\";\r\nimport useSetMarker from \"../action/kakaomap/useSetMarker\";\r\nimport useCenterChanged from \"../action/kakaomap/useCenterChanged\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst MaskMap = () => {\r\n\r\n  const { stores, getMaskDataGeo } = useMaskData();\r\n  const { setMarker } = useSetMarker();\r\n  const { getGeo } = useGeolocation();\r\n  const { setEvent } = useCenterChanged();\r\n\r\n  useEffect(() => {\r\n    getMaskDataGeo(37.4388, 127.1396, 10000).then(() => {\r\n      getGeo();\r\n      setMarker();\r\n      setEvent();\r\n    });\r\n  }, []);\r\n  return <div>\r\n    <div>\r\n      <h3>공적 마스크 지도 입니다.</h3>\r\n      <h4>해당 마커을 클릭 하시면 자세한 정보를 확인 할 수 있습니다.</h4>\r\n    </div>\r\n    <div style={{ height: \"80vh\", padding: \"10px\" }}>\r\n      <KaKaoMap >\r\n      </KaKaoMap>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default MaskMap;","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Location from \"./routes/Loaction\";\r\nimport Detail from \"./routes/Detail\";\r\nimport About from \"./routes/About\";\r\nimport Error_page from \"./routes/Error_page\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport MaskMap from \"./components/MaskMap\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Navigation />\r\n        <Switch >\r\n          <Route path=\"/\" exact={true} component={Home} />\r\n          <Route path=\"/location\" exact={true} component={Location} />\r\n          <Route path=\"/about\" exact={true} component={About} />\r\n          <Route path=\"/detail/:id\" exact={true} component={Detail} />\r\n          <Route path=\"/maskMap\" exact={true} component={MaskMap} />\r\n          <Route component={Error_page} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'antd/dist/antd.css';\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}