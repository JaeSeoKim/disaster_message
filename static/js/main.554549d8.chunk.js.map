{"version":3,"sources":["components/MsgContainer.js","action/InfinityScroll.js","store/store.js","action/useDisasterMsgAPI.js","routes/Home.js","routes/Loaction.js","routes/Error_page.js","action/kakaomap/useSetMarker.js","action/useMaskData.js","components/MaskStoreList.js","routes/Detail.js","routes/About.js","components/Navigation.js","components/kakaoMap/KakaoMap.js","action/kakaomap/useGeolocation.js","components/MaskMap.js","App.js","index.js"],"names":["no","InfinityScroll","callBack","handleScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","window","innerHeight","useEffect","addEventListener","removeEventListener","store","createStore","state","disasterMsg","searchQuery","data","pageNo","maskMap","map","storeList","action","type","concat","console","log","actionCreators","query","useDisasterMsgAPI","dispatch","useDispatch","get","a","Axios","params","ServiceKey","process","numOfRows","flag","then","response","DisasterMsg","row","catch","error","isLoding","connect","message","success","content","key","duration","length","loading","style","maxWidth","margin","marginBottom","filterData","filter","value","location_name","includes","index","to","pathname","md101_sn","location","date","create_date","msg","id","hoverable","title","onClick","block","Home","className","marginTop","Option","Select","Location","offsetTop","showSearch","width","placeholder","optionFilterProp","onChange","filterOption","input","option","children","toLowerCase","indexOf","Error_page","kakao","stores","kakaoMap","useSetMarker","useSelector","setMarker","positions","push","name","latlng","maps","LatLng","lat","lng","i","imageSize","Size","markerImage","MarkerImage","marker","Marker","position","image","useMaskData","useState","address","count","addr","code","created_at","remain_stat","stock_at","maskData","setMaskData","getMaskDataAddr","getMaskDataGeo","m","Panel","Collapse","MaskStoreList","header","textAlign","href","target","color","Detail","props","useMaskdata","undefined","history","Title","Typography","Paragraph","About","level","GithubOutlined","IdcardOutlined","Navigation","defaultSelectedKeys","defaultOpenKeys","mode","theme","Item","NotificationOutlined","PushpinOutlined","EnvironmentOutlined","InfoCircleOutlined","KakaoMap","dispatcher","container","getElementById","options","center","Map","height","useGeolocation","getGeo","navigator","geolocation","getCurrentPosition","panTo","coords","latitude","longitude","alert","MaskMap","App","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.554549d8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, message, Button } from \"antd\";\r\nimport InfinityScroll from \"../action/InfinityScroll\";\r\nimport useDisasterMsgAPI from '../action/useDisasterMsgAPI'\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nlet isLoding = false\r\nlet no;\r\n\r\nconst MsgContainer = ({ data, pageNo, searchQuery }) => {\r\n  no = pageNo;\r\n  console.log(\"Query : \", searchQuery)\r\n  const { get } = useDisasterMsgAPI(pageNo);\r\n\r\n  InfinityScroll(async () => {\r\n    if (!isLoding) {\r\n      isLoding = true;\r\n      await get(no);\r\n      isLoding = false;\r\n      message.success({ content: \"Loaded!\", key: no, duration: 2 });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    get(pageNo);\r\n  }, []);\r\n\r\n  if (data.length === 0) {\r\n    return <div>\r\n      <Card loading={true} style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }} />\r\n    </div>\r\n\r\n  } else if (searchQuery !== \"\") {\r\n    const filterData = data.filter(value =>\r\n      value.location_name.includes(searchQuery));\r\n\r\n    return <div >\r\n      {filterData.map((value, index) => (\r\n        <div style={{ margin: \"auto\", maxWidth: 550 }} key={index} >\r\n          <Link to={{\r\n            pathname: `/detail/${value.md101_sn}`,\r\n            state: {\r\n              location: value.location_name,\r\n              date: value.create_date,\r\n              msg: value.msg,\r\n              id: value.md101_sn\r\n            }\r\n          }} >\r\n            <Card hoverable style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n              title={value.location_name + \"\\t\" + value.create_date} >\r\n              {value.msg}\r\n            </Card>\r\n          </Link>\r\n        </div>\r\n      ))\r\n      }\r\n      <Button style={{ maxWidth: 500, marginBottom: 13 }}\r\n        onClick={async () => {\r\n          await get(no);\r\n          message.success({ content: \"Loaded!\", key: no, duration: 2 });\r\n        }} block>더보기</Button>\r\n    </div>\r\n  } else {\r\n    return <div >\r\n      {data.map((value, index) => (\r\n        <div style={{ margin: \"auto\", maxWidth: 550 }} key={index} >\r\n          <Link to={{\r\n            pathname: `/detail/${value.md101_sn}`,\r\n            state: {\r\n              location: value.location_name,\r\n              date: value.create_date,\r\n              msg: value.msg,\r\n              id: value.md101_sn\r\n            }\r\n          }} >\r\n            <Card hoverable style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n              title={value.location_name + \"\\t\" + value.create_date} >\r\n              {value.msg}\r\n            </Card>\r\n          </Link>\r\n        </div>\r\n      ))\r\n      }\r\n      <Button style={{ maxWidth: 500, marginBottom: 13 }}\r\n        onClick={async () => {\r\n          await get(no);\r\n          message.success({ content: \"Loaded!\", key: no, duration: 2 });\r\n        }} block>더보기</Button>\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.disasterMsg.data,\r\n    pageNo: state.disasterMsg.pageNo,\r\n    searchQuery: state.disasterMsg.searchQuery\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(MsgContainer);","import { useEffect } from 'react';\r\n\r\nconst InfinityScroll = (callBack) => {\r\n\r\n\r\n  const handleScroll = () => {\r\n    let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\r\n    let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\r\n    let clientHeight = Math.max(document.documentElement.clientHeight, window.innerHeight);\r\n    if (scrollTop + clientHeight >= scrollHeight - 2) {\r\n      if (typeof callBack === \"function\") {\r\n        callBack();\r\n      }\r\n    }\r\n  } \r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n};\r\n\r\nexport default InfinityScroll;","import { createStore } from \"redux\";\r\n\r\n/**\r\n * DisasterMSG Action Type\r\n */\r\nconst ADD_DISASTER_MSG_DATA = \"addDisasterMsgData\";\r\nconst SET_MSG_SEARCHQUERY = \"setMsgSearchQuery\";\r\n\r\nconst addDisasterMsgData = (data) => {\r\n  return {\r\n    type: ADD_DISASTER_MSG_DATA,\r\n    data: data\r\n  }\r\n};\r\n\r\nconst setMsgSearchQuery = (query) => {\r\n  return {\r\n    type: SET_MSG_SEARCHQUERY,\r\n    searchQuery: query\r\n  };\r\n};\r\n\r\n/**\r\n * MaskMap Action Type\r\n */\r\n\r\nconst SET_MAP = \"setMap\";\r\nconst SET_STORE_LIST = \"setStoreList\";\r\n\r\nconst setMap = (map) => {\r\n  return {\r\n    type: SET_MAP,\r\n    map: map\r\n  }\r\n};\r\n\r\n\r\nconst setStoreList = (storeList) => {\r\n  return {\r\n    type: SET_STORE_LIST,\r\n    storeList: storeList\r\n  };\r\n};\r\n\r\n\r\nconst reducer = (state = {\r\n  disasterMsg: {\r\n    searchQuery: \"\",\r\n    data: [],\r\n    pageNo: 1\r\n  },\r\n  maskMap: {\r\n    map: null,\r\n    storeList: []\r\n  }\r\n}, action) => {\r\n  switch (action.type) {\r\n    case ADD_DISASTER_MSG_DATA:\r\n      return {\r\n        ...state,\r\n        disasterMsg: {\r\n          ...state.disasterMsg,\r\n          data: state.disasterMsg.data.concat(action.data),\r\n          pageNo: state.disasterMsg.pageNo + 1\r\n        }\r\n      };\r\n      break;\r\n\r\n    case SET_MSG_SEARCHQUERY:\r\n      return {\r\n        ...state,\r\n        disasterMsg: {\r\n          ...state.disasterMsg,\r\n          searchQuery: action.searchQuery\r\n        }\r\n      };\r\n      break;\r\n      \r\n    case SET_MAP:\r\n      return {\r\n        ...state,\r\n        maskMap: {\r\n          ...state.maskMap,\r\n          map: action.map\r\n        }\r\n      };\r\n      break;\r\n\r\n    case SET_STORE_LIST:\r\n      console.log(action);\r\n      return {\r\n        ...state,\r\n        maskMap: {\r\n          ...state.maskMap,\r\n          storeList: action.storeList\r\n        }\r\n      };\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport const actionCreators = {\r\n  setMsgSearchQuery,\r\n  addDisasterMsgData,\r\n  setStoreList,\r\n  setMap\r\n};\r\n\r\nexport default store;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { actionCreators } from '../store/store';\r\n\r\nconst key = process.env.REACT_APP_API_KEY;\r\n\r\nexport const useDisasterMsgAPI = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const get = async (pageNo) => {\r\n    console.log(\"api : \", pageNo)\r\n    await Axios.get(\"http://apis.data.go.kr/1741000/DisasterMsg2/getDisasterMsgList\", {\r\n      params: {\r\n        ServiceKey: key,\r\n        type: \"json\",\r\n        pageNo: pageNo,\r\n        numOfRows: 50,\r\n        flag: \"Y\"\r\n      }\r\n    })\r\n      .then(response => {\r\n        dispatch(actionCreators.addDisasterMsgData(response.data.DisasterMsg[1].row));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  return { get };\r\n};\r\n\r\nexport default useDisasterMsgAPI;","import React, { useEffect } from 'react';\r\nimport MsgContainer from \"../components/MsgContainer\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { actionCreators } from '../store/store';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(()=>{\r\n    dispatch(actionCreators.setMsgSearchQuery(\"\"));\r\n  },[])\r\n\r\n  return <div className=\"home\" style={{ marginTop: 25 }}>\r\n    <MsgContainer />\r\n  </div>\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Select, Affix } from \"antd\";\r\nimport MsgContainer from \"../components/MsgContainer\";\r\nimport { actionCreators } from \"../store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Option } = Select;\r\n\r\nvar location = \"\";\r\n\r\nconst Location = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setQuery = (value) => {\r\n    console.log(`selected ${value}`);\r\n    dispatch(actionCreators.setMsgSearchQuery(value));\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Affix offsetTop={50} style={{marginBottom:10}}>\r\n        <Select\r\n          showSearch\r\n          style={{ maxWidth: 500, width: \"100%\" }}\r\n          placeholder=\"지역을 선택해 주세요.\"\r\n          optionFilterProp=\"children\"\r\n          onChange={setQuery}\r\n          filterOption={(input, option) =>\r\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n          }\r\n        >\r\n          <Option value=\"강원도\">강원도</Option>\r\n          <Option value=\"경기도\">경기도</Option>\r\n          <Option value=\"경상남도\">경상남도</Option>\r\n          <Option value=\"경상북도\">경상북도</Option>\r\n          <Option value=\"광주광역시\">광주광역시</Option>\r\n          <Option value=\"대구광역시\">대구광역시</Option>\r\n          <Option value=\"대전광역시\">대전광역시</Option>\r\n          <Option value=\"부산광역시\">부산광역시</Option>\r\n          <Option value=\"서울특별시\">서울특별시</Option>\r\n          <Option value=\"울산광역시\">울산광역시</Option>\r\n          <Option value=\"인천광역시\">인천광역시</Option>\r\n          <Option value=\"전라남도\">전라남도</Option>\r\n          <Option value=\"전라북도\">전라북도</Option>\r\n          <Option value=\"제주특별자치도\">제주특별자치도</Option>\r\n          <Option value=\"충청남도\">충청남도</Option>\r\n          <Option value=\"충청북도\">충청북도</Option>\r\n          <Option value=\"세종특별자치시\">세종특별자치시</Option>\r\n        </Select>\r\n      </Affix>\r\n      <MsgContainer Location={location} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React from \"react\";\r\n\r\nconst Error_page = () => {\r\n  return (\r\n    <h1>404 Error</h1>\r\n  );\r\n};\r\n\r\nexport default Error_page;\r\n","/*global kakao*/\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { kakao } = window;\r\n\r\nvar stores = []\r\n\r\nvar kakaoMap = {};\r\n\r\nconst useSetMarker = () => {\r\n\r\n  const { map, storeList } = useSelector(state => ({\r\n    map: state.maskMap.map,\r\n    storeList: state.maskMap.storeList\r\n  }));\r\n  stores = storeList;\r\n  kakaoMap = map;\r\n  // const content = '<div>' +\r\n  //   '<div style=\"width: 100%;' +\r\n  //   'background-color: white;' +\r\n  //   'margin-bottom: 3px;' +\r\n  //   'padding: 5px;' +\r\n  //   'border-radius: 5px;' +\r\n  //   'color: #adaeb9;' +\r\n  //   'box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),' +\r\n  //   '  0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\">' +\r\n  //   '<h4>~약국</h4>' +\r\n  //   '<p>주소~~~</p>' +\r\n  //   '</div>' +\r\n  //   '<i class=\"fa fa-map-marker\" style=\"font-size:48px;color:red\"></i>' +\r\n  //   '</div>'\r\n\r\n  // // 커스텀 오버레이를 생성합니다\r\n  // var customOverlay = new kakao.maps.CustomOverlay({\r\n  //   map: map,\r\n  //   position: new kakao.maps.LatLng(lat, lng),\r\n  //   content: content,\r\n  //   yAnchor: 1\r\n  // });\r\n\r\n  const setMarker = () => {\r\n    const positions = [];\r\n    const imageSrc = \"https://raw.githubusercontent.com/JaeSeoKim/disaster_message/master/resource/maskMapMarker/blue.png\";\r\n    stores.map(value => {\r\n      // value.addr\r\n      // value.created_at\r\n      // value.stock_at\r\n      // value.remain_stat\r\n      // value.lat,\r\n      // value.lng\r\n      positions.push({\r\n        title: value.name,\r\n        latlng: new kakao.maps.LatLng(value.lat, value.lng)\r\n      });\r\n    });\r\n\r\n    for (var i = 0; i < positions.length; i++) {\r\n      \r\n      // 마커 이미지의 이미지 크기 입니다\r\n      var imageSize = new kakao.maps.Size(30, 35);\r\n      // 마커 이미지를 생성합니다    \r\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n\r\n      // 마커를 생성합니다\r\n      var marker = new kakao.maps.Marker({\r\n        map: kakaoMap, // 마커를 표시할 지도\r\n        position: positions[i].latlng, // 마커를 표시할 위치\r\n        title: positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n        image: markerImage // 마커 이미지 \r\n      });\r\n\r\n      console.log(marker);\r\n    }\r\n\r\n  };\r\n  return { setMarker };\r\n}\r\n\r\nexport default useSetMarker;","import { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport useSetMarker from \"./kakaomap/useSetMarker\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../store/store\";\r\n\r\nconst useMaskData = () => {\r\n  /*\r\n  주소 기준 동네별 공적 마스크 판매정보 제공 서비스주소 기준 동네별 공적 마스크 판매정보 제공 서비스\r\n\r\n  address     주소\t            string\t\t\t검색 기준이 될 주소\r\n  count\t      조회 수\t          integer\t\t\t조회 데이터 수\r\n  addr\t      판매처 주소       string\t\t\t판매처 주소\r\n  code\t      식별코드          string\t\t\t\r\n  created_at\t데이터 생성일자   string\t\t\t\r\n  remain_stat\t재고 상태\t        string\t\t\t100개 이상(녹색): 'plenty' / \r\n                                            30개 이상 100개미만(노랑색): 'some' / \r\n                                            2개 이상 30개 미만(빨강색): 'few' / \r\n                                            1개 이하(회색): 'empty' / \r\n                                            판매중지: 'break'\r\n  stock_at\t  입고시간\t        string\t\t\t\r\n  lat\t        위도\t            number($float)\t\t\twgs84 좌표계 / \r\n                                                    최소:33.0, 최대:43.0\r\n  lng\t        경도\t            number($float)\t\t\twgs84 표준 / \r\n                                                    최소:124.0, 최대:132.0\r\n  name\t      이름\t            string\t\t\t\r\n  type\t      판매처 유형\t      string\t\t\t약국: '01', 우체국: '02', 농협: '03'\r\n  */\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [maskData, setMaskData] = useState(\r\n    {\r\n      address: \"\",\r\n      count: 0,\r\n      stores: [\r\n        {\r\n          addr: \"\",\r\n          code: \"\",\r\n          created_at: \"\",\r\n          lat: 0,\r\n          lng: 0,\r\n          name: \"\",\r\n          remain_stat: \"\",\r\n          stock_at: \"\",\r\n          type: \"\"\r\n        }\r\n      ]\r\n    }\r\n  );\r\n\r\n  const getMaskDataAddr = async (location) => {\r\n    console.log(\"location: \", location);\r\n    await Axios.get(\r\n      `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByAddr/json?address=${location}`)\r\n      .then(response => {\r\n        const { address,\r\n          count,\r\n          stores } = response.data\r\n        console.log(response);\r\n        setMaskData(\r\n          {\r\n            address,\r\n            count,\r\n            stores\r\n          }\r\n        );\r\n        console.log(stores);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /*\r\n  url\t/storesByGeo/json\r\n  key\t항목명(국문)\ttype\t기본값\t필수\t항목설명\r\n  Lat\t위도\tnumber\t\tN\twgs84 좌표계 / \r\n  최소:33.0, 최대:43.0\r\n  lng\t경도\tnumber\t\tN\twgs84 표준 / \r\n  최소:124.0, 최대:132.0\r\n  m\t반경(미터)\tinteger\t\tN\t최대 5000(5km)까지 조회 가능\r\n  */\r\n\r\n  const getMaskDataGeo = async (lat, lng, m) => {\r\n    console.log(\"lat: \", lat, \" lng: \", lng, \" m: \", m);\r\n    await Axios.get(\r\n      `https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${lat}&lng=${lng}&m=${m}`)\r\n      .then(response => {\r\n        const {\r\n          count,\r\n          stores } = response.data\r\n        dispatch(actionCreators.setStoreList(stores));\r\n      }).catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return { ...maskData, getMaskDataAddr, getMaskDataGeo };\r\n}\r\n\r\nexport default useMaskData;","import React from \"react\";\r\nimport { Collapse, Card, Tag } from \"antd\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst MaskStoreList = ({ stores, address }) => {\r\n\r\n  return (\r\n    <div className=\"more_Info\">\r\n      <Collapse style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}>\r\n        <Panel header={address + \"의 현재 구매 가능한 마스크 판매처\"} key=\"maskMap\">\r\n          <h3 style={{textAlign:\"le\"}}>\r\n            <p>현재 구매 가능한 구매처만 목록화 했습니다.</p>\r\n            <p>해당 카드를 클릭 하시면 판매처 주소를 확인 할 수 있습니다.</p>\r\n          </h3>\r\n          {stores.map((value, index) => (\r\n            typeof value.remain_stat !== \"undefined\"  && value.remain_stat !== \"\"  && value.remain_stat !== null && value.remain_stat !== \"break\" && value.remain_stat !== \"empty\" &&\r\n              <a href={\"https://map.kakao.com/link/map/\" + value.name + \",\" + value.lat + \",\" + value.lng} target=\"_blank\" key={value.code}>\r\n                <Card style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n                  title={value.name} >\r\n                  <div style={{ textAlign: \"left\" }}>\r\n                    <p>주소 : {value.addr}</p>\r\n                    <p>마지막 업데이트 : {value.created_at}</p>\r\n                    <p>입고 시간 : {value.stock_at}</p>\r\n                    <p>\r\n                      {value.remain_stat === \"plenty\" && <Tag color=\"#87d068\">100개 이상</Tag>}\r\n                      {value.remain_stat === \"some\" && <Tag color=\"#2db7f5\">30개 이상 100개 미만</Tag>}\r\n                      {value.remain_stat === \"few\" && <Tag color=\"#f50\">30개 미만</Tag>}\r\n                    </p>\r\n                  </div>\r\n                </Card>\r\n              </a>\r\n          ))}\r\n        </Panel>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default MaskStoreList;","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Collapse, } from \"antd\";\r\nimport Error_page from \"./Error_page\";\r\nimport useMaskdata from \"../action/useMaskData\";\r\nimport MaskStoreList from \"../components/MaskStoreList\";\r\n\r\nconst Detail = (props) => {\r\n\r\n  const {\r\n    address,\r\n    count,\r\n    stores,\r\n    getMaskDataAddr\r\n  } = useMaskdata();\r\n  useEffect(() => {\r\n    if (props.location.state === undefined) {\r\n      props.history.push('/');\r\n    } else {\r\n      getMaskDataAddr(props.location.state.location);\r\n    }\r\n  }, []);\r\n\r\n  const data = props.location.state;\r\n\r\n  return <div>\r\n    {data === undefined ? <Error_page />\r\n      :\r\n      <div>\r\n        <h1>개발중..........</h1>\r\n        <Card style={{ maxWidth: 500, margin: \"auto\", marginBottom: 13 }}\r\n          title={data.location + \"\\t\" + data.date} >\r\n          {data.msg}\r\n        </Card>\r\n        {count === 0 ?\r\n          <div className=\"maskStoreList\" />\r\n          :\r\n          <MaskStoreList stores={stores} address={address}>\r\n          </MaskStoreList>\r\n        }\r\n      </div>\r\n    }\r\n  </div>\r\n};\r\n\r\nexport default Detail;\r\n\r\n\r\n","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { GithubOutlined, IdcardOutlined } from '@ant-design/icons';\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst About = () => {\r\n  return (\r\n    <Typography>\r\n      <a href=\"https://github.com/JaeSeoKim/disaster_message/\">\r\n        <Title>Disaster_message</Title>\r\n      </a>\r\n      <Paragraph>\r\n        이 프로젝트는 한국 공공데이터 포털에서 제공하는 `재난문자방송 발령현황 서비스 API` 를 이용하여 제작 하였습니다.\r\n        </Paragraph>\r\n      <Title level={4}>Created by JaeSeoKim</Title>\r\n      <a href=\"https://github.com/JaeSeoKim\">\r\n        <Title level={4}><GithubOutlined /> Github</Title>\r\n      </a>\r\n      <a href=\"https://jaeseokim.tistory.com/\">\r\n        <Title level={4}><IdcardOutlined /> Blog</Title>\r\n      </a>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { Menu, Affix } from 'antd';\r\nimport {\r\n  InfoCircleOutlined,\r\n  PushpinOutlined,\r\n  NotificationOutlined,\r\n  EnvironmentOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Affix style={{ marginBottom: 10 }}>\r\n      <div>\r\n        <Menu\r\n          defaultSelectedKeys={['home']}\r\n          defaultOpenKeys={['menu']}\r\n          mode=\"horizontal\"\r\n          theme=\"white\"\r\n        >\r\n          <Menu.Item key=\"home\">\r\n            <NotificationOutlined />\r\n            <NavLink to=\"/\">\r\n              <span>재난문자 목록</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"location\">\r\n            <PushpinOutlined />\r\n            <NavLink to=\"/location\">\r\n              <span>지역별 재난문자</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"maskMap\">\r\n            <EnvironmentOutlined />\r\n            <NavLink to=\"/maskMap\">\r\n              <span>마스크맵</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"about\">\r\n            <InfoCircleOutlined />\r\n            <NavLink to=\"/about\">\r\n              <span>About</span>\r\n            </NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","/*global kakao*/\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../../store/store\";\r\nimport useSetMarker from \"../../action/kakaomap/useSetMarker\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst KakaoMap = () => {\r\n\r\n  const dispatcher = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    const container = document.getElementById('mask-map');\r\n    const options = {\r\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n      level: 3\r\n    };\r\n    const map = new kakao.maps.Map(container, options);\r\n    dispatcher(actionCreators.setMap(map), [map]);\r\n  }, [])\r\n\r\n  return <div id=\"mask-map\" style={{ height: \"100%\" }}>\r\n  </div>\r\n}\r\n\r\nexport default KakaoMap;","/*global kakao*/\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst { kakao } = window\r\n\r\nvar kakaoMap= {};\r\n\r\nconst useGeolocation = () => {\r\n\r\n  const { map } = useSelector(state => ({ map: state.maskMap.map }), []);\r\n\r\n  kakaoMap = map;\r\n  \r\n  const getGeo = () => {\r\n    if (navigator.geolocation) {\r\n      if (kakaoMap !== null) {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n          kakaoMap.panTo(new kakao.maps.LatLng(position.coords.latitude, position.coords.longitude));\r\n        }\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"이 브라우저에서는 Geolocation이 지원되지 않습니다.\")\r\n    }\r\n  }\r\n  return {getGeo} ;\r\n}\r\n\r\nexport default useGeolocation;","/*global kakao*/\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport useMaskData from \"../action/useMaskData\";\r\nimport KaKaoMap from \"./kakaoMap/KakaoMap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useGeolocation from \"../action/kakaomap/useGeolocation\";\r\nimport useSetMarker from \"../action/kakaomap/useSetMarker\";\r\n\r\nconst { kakao } = window;\r\n\r\nconst MaskMap = () => {\r\n\r\n  const { stores, getMaskDataGeo } = useMaskData();\r\n  const { setMarker } = useSetMarker();\r\n  const { getGeo } = useGeolocation();\r\n  useEffect(() => {\r\n    getMaskDataGeo(37.4388, 127.1396, 10000).then(()=>{\r\n      getGeo();\r\n      setMarker();\r\n    });\r\n  }, []);\r\n  return <div style={{ height: 500 }}>\r\n    <h1>아직 구현 중입니다. ㅠㅠㅠ</h1>\r\n    <KaKaoMap>\r\n    </KaKaoMap>\r\n  </div>\r\n}\r\n\r\nexport default MaskMap;","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Location from \"./routes/Loaction\";\r\nimport Detail from \"./routes/Detail\";\r\nimport About from \"./routes/About\";\r\nimport Error_page from \"./routes/Error_page\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport MaskMap from \"./components/MaskMap\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <Navigation />\r\n        <Switch >\r\n          <Route path=\"/\" exact={true} component={Home} />\r\n          <Route path=\"/location\" exact={true} component={Location} />\r\n          <Route path=\"/about\" exact={true} component={About} />\r\n          <Route path=\"/detail/:id\" exact={true} component={Detail} />\r\n          <Route path=\"/maskMap\" exact={true} component={MaskMap} />\r\n          <Route component={Error_page} />\r\n        </Switch>\r\n      </HashRouter>\r\n    </Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'antd/dist/antd.css';\r\nimport \"./App.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}